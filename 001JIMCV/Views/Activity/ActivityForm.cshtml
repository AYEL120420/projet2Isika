@model _001JIMCV.Models.Classes.Activity
@{
    var countries = Enum.GetValues(typeof(_001JIMCV.Models.Classes.Enum.CountryEnum))
    .Cast<_001JIMCV.Models.Classes.Enum.CountryEnum>()
    .Select(e => new SelectListItem
            {
                Value = e.ToString(),
                Text = e.ToString()
            })
    .ToList();
    Layout = "_LayoutJimcv";
}

<div style="display:flex; justify-content:space-between; align-items:center; flex-direction: column">
    <h2>
        Vous avez une ou des activités à proposer ? C'est par ici !
    </h2>

</div>
<br />

@using (Html.BeginForm("CreateActivity", "Activity", FormMethod.Post))
{
    <fieldset>
        <div style="display:flex; justify-content:space-between; align-items:center; flex-direction: column">
        <div>
            @Html.LabelFor(m => m.ProviderName, "Nom partenaire")
            @Html.TextBoxFor(m => m.ProviderName)
            @Html.ValidationMessageFor(m => m.ProviderName)
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.ProviderEmail, "Adresse email")
            @Html.TextBoxFor(m => m.ProviderEmail)
            @Html.ValidationMessageFor(m => m.ProviderEmail)
        </div>
            <br />
        <div>
            @Html.LabelFor(m => m.Country, "Pays")
            @Html.DropDownListFor(m => m.Country, new SelectList(countries, "Value", "Text"), "-- Sélectionner --", new { required = "required" })
            @Html.ValidationMessageFor(m => m.Country)
        </div>
        <br/>
        <div>
            @Html.LabelFor(m => m.City, "Ville")
            @Html.TextBoxFor(m => m.City, new {required = "required" })
            @Html.ValidationMessageFor(m => m.City)
        </div>
            <br />
        <div>
            @Html.LabelFor(m => m.Name, "Nom")
            @Html.TextBoxFor(m => m.Name)
            @Html.ValidationMessageFor(m => m.Name)
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.Description)
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.Date)
            @Html.TextBoxFor(m => m.Date, new { @type = "date"})
            @Html.ValidationMessageFor(m => m.Date)
        </div>
        <br/>
        <div>
            @Html.LabelFor(m => m.Adress, "Adresse")
            @Html.TextBoxFor(m => m.Adress)
            @Html.ValidationMessageFor(m => m.Adress)
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.Price,"Prix")
            @Html.TextBoxFor(m => m.Price, new { step = "0.01" })
            @Html.ValidationMessageFor(m => m.Price)
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.Image)
            @Html.TextBoxFor(m => m.Image, new { @type = "file", @class = "form-control-file" })
            @Html.ValidationMessageFor(m => m.Image)
        </div>
        <br/>
        <div>
            <input type="submit" value="Enregistrer" class="btn btn-primary" />
        </div>
        </div>
    </fieldset>
}

