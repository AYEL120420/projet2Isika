@model _001JIMCV.Models.Classes.Accommodation
@{
    Layout = "_LayoutJimcv";
}

@{
    var countries = Enum.GetValues(typeof(_001JIMCV.Models.Classes.Enum.CountryEnum))
    .Cast<_001JIMCV.Models.Classes.Enum.CountryEnum>()
    .Select(e => new SelectListItem
            {
                Value = e.ToString(),
                Text = e.ToString()
            })
    .ToList();
}

<div style="display:flex; justify-content:space-between; align-items:center; flex-direction: column">
    <h2>
        Vous avez un hébergement à proposer pour nos clients ? Remplissez ce formulaire et recevez une validation de notre service sous 48h !
    </h2>

</div>

<br />

@using (Html.BeginForm("CreateAccommodation", "Accommodation", FormMethod.Post))
{
    <fieldset>
        <div style="display:flex; justify-content:space-between; align-items:center; flex-direction: column">
        <div>
            @Html.LabelFor(m => m.ProviderName, "Nom partenaire")
            @Html.TextBoxFor(m => m.ProviderName)
            @Html.ValidationMessageFor(m => m.ProviderName)
        </div>
        <br/>
        <div>
            @Html.LabelFor(m => m.ProviderEmail, "Adresse email")
            @Html.TextBoxFor(m => m.ProviderEmail)
            @Html.ValidationMessageFor(m => m.ProviderEmail)
        </div>
        <br/>
        <div>
            @Html.LabelFor(m => m.Country, "Pays")
            @Html.DropDownListFor(m => m.Country, new SelectList(countries, "Value", "Text"), "-- Sélectionner --", new { required = "required" })
            @Html.ValidationMessageFor(m => m.Country)
        </div>
        <br/>
        <div>
            @Html.LabelFor(m => m.City, "Ville")
            @Html.TextBoxFor(m => m.City, new {required = "required" })
            @Html.ValidationMessageFor(m => m.City)
        </div>
        <br/>
        <div>
            @Html.LabelFor(m => m.Type)
            <span>
                <label>
                    @Html.RadioButtonFor(m => m.Type, "Chez l'habitant")
                    Chez l'habitant
                </label>
            </span>
            <span>
                <label>
                    @Html.RadioButtonFor(m => m.Type, "Hôtel")
                    Hôtel
                </label>
            </span>
            <span class="form-control">
                <label class="form-check-label">
                    @Html.RadioButtonFor(m => m.Type, "Chambre d'hôte")
                Chambre d'hôte
                </label>
            </span>
            @Html.ValidationMessageFor(m => m.Type)
        </div>
        <br />
        <div>
            <span>
                @Html.LabelFor(m => m.StartDate, "Disponible de")
                @Html.TextBoxFor(m => m.StartDate, new { @type = "date" })
                @Html.ValidationMessageFor(m => m.StartDate)
            </span>

            <span>
                @Html.LabelFor(m => m.EndDate, "A")
                @Html.TextBoxFor(m => m.EndDate, new { @type = "date" })
                @Html.ValidationMessageFor(m => m.EndDate)
            </span>
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.Adress, "Adresse" )
            @Html.TextBoxFor(m => m.Adress)
            @Html.ValidationMessageFor(m => m.Adress)
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.Description)
            @Html.TextAreaFor(m => m.Description)
            @Html.ValidationMessageFor(m => m.Description)
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.Price,"Prix")
            @Html.TextBoxFor(m => m.Price, new { step = "0.01" })
            @Html.ValidationMessageFor(m => m.Price)
        </div>
        <br/>
        <div>
            @Html.LabelFor(m => m.Image)
            <input type="file" name="Image" id="Image" />
            @Html.ValidationMessageFor(m => m.Image)
        </div>
        <br />
        <div class="form-control">
            <input type="submit" value="Envoyer" class="btn btn-primary" />

        </div>
     </div>
    </fieldset>
}