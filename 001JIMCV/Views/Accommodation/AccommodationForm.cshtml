
@model _001JIMCV.Models.Classes.Accommodation
@{
    Layout = "_LayoutJimcv";
}

@{
    var countries = Enum.GetValues(typeof(_001JIMCV.Models.Classes.Enum.CountryEnum))
    .Cast<_001JIMCV.Models.Classes.Enum.CountryEnum>()
    .Select(e => new SelectListItem
            {
                Value = e.ToString(),
                Text = e.ToString()
            })
    .ToList();
}

    <div style="display:flex; justify-content:space-between; align-items:center; flex-direction: column">
        <h2>
        Vous avez un hébergement à proposer pour nos clients ? Remplissez ce formulaire et recevez une validation de notre service sous 48h !
        </h2>

    </div>
       
    <br />

    @using (Html.BeginForm("CreateAccommodation", "Accommodation", FormMethod.Post))
    {
        <fieldset>
           
                <div class="form-group">
                    @Html.LabelFor(m => m.Pays)<br>
                    @Html.DropDownListFor(m => m.Pays, new SelectList(countries, "Value", "Text"), "-- Sélectionner --", new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(m => m.Pays)
                </div><br>

                <div class="form-group">
                    @Html.LabelFor(m => m.Ville)<br>
                    @Html.TextBoxFor(m => m.Ville, new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(m => m.Ville)
                </div>
   <div>
        @Html.LabelFor(m => m.Type)
        <span>
            <label class="form-control">
                @Html.RadioButtonFor(m => m.Type, "Chez l'habitant")
                Chez l'habitant
            </label>
        </span>
        <span>
            <label class="form-control">
                @Html.RadioButtonFor(m => m.Type, "Hôtel")
                Hôtel
            </label>
        </span>
        <span class="form-control">
            <label class="form-check-label">
                @Html.RadioButtonFor(m => m.Type, "Chambre d'hôte")
                Chambre d'hôte
            </label>
        </span>
        @Html.ValidationMessageFor(m => m.Type)
        </div><br /><br />
        <div>
    Disponibilté 
    <span class="form-control">
        @Html.LabelFor(m => m.De)
        @Html.TextBoxFor(m => m.De, new { @type = "date" })
        @Html.ValidationMessageFor(m => m.De)
    </span>

    <span class="form-control">
        @Html.LabelFor(m => m.A)
        @Html.TextBoxFor(m => m.A, new { @type = "date" })
        @Html.ValidationMessageFor(m => m.A)
    </span> 
    </div>
        <br />
    <div>
        @Html.LabelFor(m => m.Adresse )<br>
        @Html.TextBoxFor(m => m.Adresse)
        @Html.ValidationMessageFor(m => m.Adresse)<br>
    </div>
    <div>
        @Html.LabelFor(m => m.Description)<br>
        @Html.TextAreaFor(m => m.Description)
        @Html.ValidationMessageFor(m => m.Description)<br>
    </div>
    <div>
        @Html.LabelFor(m => m.Prix)<br>
        @Html.TextBoxFor(m => m.Prix)
        @Html.ValidationMessageFor(m => m.Prix)<br>
    </div>
        <br>
        <div>
        @Html.LabelFor(m => m.Image)<br>
            <input type="file" name="Image" id="Image" />
        @Html.ValidationMessageFor(m => m.Image)<br>
        </div><br />
        <div class="form-control">
            <input type="submit" value="Envoyer" class="btn btn-primary" />

        </div>
        </fieldset>
    }