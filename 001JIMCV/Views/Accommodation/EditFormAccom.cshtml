@model _001JIMCV.Models.Classes.Accommodation
@{
    Layout = "_LayoutJimcv";

    string formAction = ViewData["FormAction"] as string;
    string formMethod = ViewData["FormMethod"] as string ?? "post";
    string submitText = ViewData["SubmitText"] as string ?? "Enregistrer";


    var countries = Enum.GetValues(typeof(_001JIMCV.Models.Classes.Enum.CountryEnum))
    .Cast<_001JIMCV.Models.Classes.Enum.CountryEnum>()
    .Select(e => new SelectListItem
            {
                Value = e.ToString(),
                Text = e.ToString()
            })
    .ToList();
}

@using (Html.BeginForm(formAction, "Accommodation", FormMethod.Post))
{
    <fieldset>
        <div>
            @Html.LabelFor(m => m.ProviderName, "Nom paretenaire")
            @Html.TextBoxFor(m => m.ProviderName)
            @Html.ValidationMessageFor(m => m.ProviderName)
        </div>
        <div>
            @Html.LabelFor(m => m.ProviderEmail, "Adresse email")
            @Html.TextBoxFor(m => m.ProviderEmail)
            @Html.ValidationMessageFor(m => m.ProviderEmail)
        </div>
        <div>
            @Html.LabelFor(m => m.Country, "Pays")<br>
            @Html.DropDownListFor(m => m.Country, new SelectList(countries, "Value", "Text"), "-- Sélectionner --", new { required = "required" })
            @Html.ValidationMessageFor(m => m.Country)
        </div>
        <br>

        <div>
            @Html.LabelFor(m => m.City, "Ville")<br>
            @Html.TextBoxFor(m => m.City, new {required = "required" })
            @Html.ValidationMessageFor(m => m.City)
        </div>
        <div>
            @Html.LabelFor(m => m.Type)
            <span>
                <label>
                    @Html.RadioButtonFor(m => m.Type, "Chez l'habitant")
                    Chez l'habitant
                </label>
            </span>
            <span>
                <label>
                    @Html.RadioButtonFor(m => m.Type, "Hôtel")
                    Hôtel
                </label>
            </span>
            <span class="form-control">
                <label class="form-check-label">
                    @Html.RadioButtonFor(m => m.Type, "Chambre d'hôte")
                    Chambre d'hôte
                </label>
            </span>
            @Html.ValidationMessageFor(m => m.Type)
        </div>
        <br />
        <br />
        <div>
            Disponibilté
            <span>
                @Html.LabelFor(m => m.StartDate, "Disponible de")
                @Html.TextBoxFor(m => m.StartDate, new { @type = "date" })
                @Html.ValidationMessageFor(m => m.StartDate)
            </span>

            <span>
                @Html.LabelFor(m => m.EndDate, "A")
                @Html.TextBoxFor(m => m.EndDate, new { @type = "date" })
                @Html.ValidationMessageFor(m => m.EndDate)
            </span>
        </div>
        <br />
        <div>
            @Html.LabelFor(m => m.Adress, "Adresse" )<br>
            @Html.TextBoxFor(m => m.Adress)
            @Html.ValidationMessageFor(m => m.Adress)<br>
        </div>
        <div>
            @Html.LabelFor(m => m.Description)<br>
            @Html.TextAreaFor(m => m.Description)
            @Html.ValidationMessageFor(m => m.Description)<br>
        </div>
        <div>
            @Html.LabelFor(m => m.Price,"Prix")<br>
            @Html.TextBoxFor(m => m.Price, new { step = "0.01" })
            @Html.ValidationMessageFor(m => m.Price)<br>
        </div>
        <br>

        <br>
        <div class="form-group">
            <label for="Status">Status</label>
            <input type="text" id="Status" name="Status" class="form-control" value="@Model.Status" @((User.IsInRole("Provider")) ? "readonly" : "") />
        </div>
        <div>
            @Html.LabelFor(m => m.Image)<br>
            <input type="file" name="Image" id="Image" />
            @Html.ValidationMessageFor(m => m.Image)<br>
        </div>
        <br />
        <div class="form-control">
            <input type="submit" value="Envoyer" class="btn btn-primary" />

        </div>
    </fieldset>
}
